
CREATE DATABASE movbr;


\c movbr;


-- Ativar extensão PostGIS, Serve pra: Ativar a extensão PostGIS no PostgreSQL, que permite trabalhar com dados geoespaciais (latitude, longitude, pontos, rotas, áreas, distâncias, etc).
CREATE EXTENSION IF NOT EXISTS postgis;

-- Tabelas
CREATE TABLE usuario (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha_hash VARCHAR(255) NOT NULL,
    tipo VARCHAR(20) NOT NULL CHECK (tipo IN ('comum', 'turista', 'administrador'))
);

CREATE TABLE veiculo (
    id SERIAL PRIMARY KEY,
    identificador VARCHAR(50) NOT NULL,
    linha VARCHAR(50) NOT NULL,
    latitude FLOAT8 NOT NULL,
    longitude FLOAT8 NOT NULL,
    atualizado_em TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    geom GEOGRAPHY(POINT, 4326)
);

CREATE TABLE rota (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    origem VARCHAR(100) NOT NULL,
    destino VARCHAR(100) NOT NULL,
    distancia NUMERIC(8,2) NOT NULL,
    tempo_estimado INTEGER NOT NULL
);

CREATE TABLE parada (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    latitude FLOAT8 NOT NULL,
    longitude FLOAT8 NOT NULL,
    endereco VARCHAR(150),
    geom GEOGRAPHY(POINT, 4326)
);

CREATE TABLE itinerario (
    id SERIAL PRIMARY KEY,
    usuario_id INTEGER NOT NULL REFERENCES usuario(id) ON DELETE CASCADE,
    origem VARCHAR(100) NOT NULL,
    destino VARCHAR(100) NOT NULL,
    distancia NUMERIC(8,2) NOT NULL,
    tempo_estimado INTEGER NOT NULL,
    criado_em TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE itinerario_parada (
    id SERIAL PRIMARY KEY,
    itinerario_id INTEGER NOT NULL REFERENCES itinerario(id) ON DELETE CASCADE,
    parada_id INTEGER NOT NULL REFERENCES parada(id) ON DELETE CASCADE,
    ordem INTEGER NOT NULL
);

CREATE TABLE veiculo_rota (
    id SERIAL PRIMARY KEY,
    veiculo_id INTEGER NOT NULL REFERENCES veiculo(id) ON DELETE CASCADE,
    rota_id INTEGER NOT NULL REFERENCES rota(id) ON DELETE CASCADE
);

CREATE TABLE ponto_turistico (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    latitude FLOAT8 NOT NULL,
    longitude FLOAT8 NOT NULL,
    endereco VARCHAR(150),
    imagem_url VARCHAR(255),
    geom GEOGRAPHY(POINT, 4326)
);

CREATE TABLE notificacao (
    id SERIAL PRIMARY KEY,
    usuario_id INTEGER NOT NULL REFERENCES usuario(id) ON DELETE CASCADE,
    titulo VARCHAR(100) NOT NULL,
    mensagem TEXT NOT NULL,
    tipo VARCHAR(20) NOT NULL CHECK (tipo IN ('alerta', 'informacao', 'atraso', 'desvio')),
    criado_em TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    lida BOOLEAN DEFAULT FALSE
);

-- Índices geoespaciais / Isso aqui é pra teste nao sei como funciona bem ainda, mas parece facilitar bastante as pesquisas...
CREATE INDEX idx_veiculo_geom ON veiculo USING GIST (geom);
CREATE INDEX idx_parada_geom ON parada USING GIST (geom);
CREATE INDEX idx_ponto_turistico_geom ON ponto_turistico USING GIST (geom);
